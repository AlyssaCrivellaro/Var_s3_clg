"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Echo = void 0;
const DocUtils_1 = require("./DocUtils");
const chalk_1 = __importDefault(require("chalk"));
const global_config_1 = require("../global_config");
const Tag_1 = require("./Tag");
global_config_1.globalConfig.event.on('log:echo', (e) => {
    global_config_1.globalConfig.log(chalk_1.default.gray.italic('%j'), e.msg);
});
class Echo extends Tag_1.Tag {
    constructor(attrs) {
        super(attrs);
    }
    exec() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.schema && this.msg !== null && this.msg !== undefined) {
                this.msg = DocUtils_1.toJsonSchema(this.msg);
            }
            global_config_1.globalConfig.event.emit('log:echo', this);
        });
    }
}
exports.Echo = Echo;
//# sourceMappingURL=Echo.js.map