"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pause = void 0;
const global_config_1 = require("../global_config");
const readline = __importStar(require("readline"));
const Tag_1 = require("./Tag");
global_config_1.globalConfig.event.on('log:pause', (e) => {
    if (e.time) {
        global_config_1.globalConfig.log(`|| Sleep %dms (%s)`, e.time, e.title || '');
    }
    else {
        global_config_1.globalConfig.log(`|> Enter to continue (${e.title || ''})`);
    }
});
class Pause extends Tag_1.Tag {
    prepare() {
        const _super = Object.create(null, {
            prepare: { get: () => super.prepare }
        });
        return __awaiter(this, void 0, void 0, function* () {
            yield _super.prepare.call(this);
            this.time = Tag_1.Tag.replaceVars(this.time);
            this.time = +this.time;
        });
    }
    pause() {
        const rl = readline.createInterface({
            input: process.stdin,
            output: process.stdout
        });
        return new Promise((r) => {
            rl.question('', () => {
                rl.close();
                r();
            });
        });
    }
    delay() {
        return new Promise((r) => {
            setTimeout(r, this.time);
        });
    }
    exec() {
        return __awaiter(this, void 0, void 0, function* () {
            global_config_1.globalConfig.event.emit('log:pause', this);
            if (this.time) {
                yield this.delay();
            }
            else {
                yield this.pause();
            }
        });
    }
}
exports.Pause = Pause;
//# sourceMappingURL=Pause.js.map