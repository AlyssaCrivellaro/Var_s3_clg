"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Regex = void 0;
const global_config_1 = require("../global_config");
const Tag_1 = require("./Tag");
global_config_1.globalConfig.event.on('log:regex', (e) => {
    if (e.title) {
        global_config_1.globalConfig.log(`- %s`, e.title);
    }
});
class Regex extends Tag_1.Tag {
    constructor(attrs) {
        super(attrs);
    }
    exec() {
        var _a;
        global_config_1.globalConfig.event.emit('log:regex', this);
        const pt = eval(this.pattern);
        switch (this.action) {
            case 'exec':
                this.value = [];
                let m;
                while ((m = pt.exec(this.input)) !== null) {
                    this.value.push(m);
                }
                break;
            case 'test':
                this.value = pt.test(this.input);
            default:
                this.value = (_a = this.input) === null || _a === void 0 ? void 0 : _a.match(pt);
                break;
        }
        if (typeof this.var === 'string') {
            global_config_1.globalConfig.vars[this.var] = this.value;
        }
        else {
            for (const k in this.var) {
                global_config_1.globalConfig.vars[k] = Tag_1.Tag.replaceVars(this.var[k], Object.assign(Object.assign({}, global_config_1.globalConfig.vars), { $vars: global_config_1.globalConfig.vars, $: this, $$: this.$$, $utils: global_config_1.globalConfig.utils }));
            }
        }
    }
}
exports.Regex = Regex;
//# sourceMappingURL=Regex.js.map