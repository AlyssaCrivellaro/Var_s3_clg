{
  "$schema": "http://json-schema.org/draft-07/schema",
  "anyOf": [
    {
      "$ref": "#/definitions/testcase"
    },
    {
      "$ref": "#/definitions/group"
    },
    {
      "$ref": "#/definitions/allOfSteps"
    }
  ],
  "definitions": {
    "allOfSteps": {
      "type": "array",
      "description": "Steps",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/doc-swagger"
          },
          {
            "$ref": "#/definitions/doc-md"
          },
          {
            "$ref": "#/definitions/output-file"
          },
          {
            "$ref": "#/definitions/file"
          },
          {
            "$ref": "#/definitions/script"
          },
          {
            "$ref": "#/definitions/echo"
          },
          {
            "$ref": "#/definitions/echo-schema"
          },
          {
            "$ref": "#/definitions/vars"
          },
          {
            "$ref": "#/definitions/validate"
          },
          {
            "$ref": "#/definitions/utils"
          },
          {
            "$ref": "#/definitions/vars"
          },
          {
            "$ref": "#/definitions/regex"
          },
          {
            "$ref": "#/definitions/exec"
          },
          {
            "$ref": "#/definitions/input"
          },
          {
            "$ref": "#/definitions/api"
          },
          {
            "$ref": "#/definitions/group"
          }
        ]
      }
    },
    "file": {
      "type": "string",
      "description": "Import other scenarios, or data file"
    },
    "upload": {
      "type": "string",
      "description": "Be used in upload file in API"
    },
    "script": {
      "type": "string",
      "description": "Embed script in scenario"
    },
    "echo": {
      "type": "string",
      "description": "Print log or data object"
    },
    "regex": {
      "type": "object",
      "description": "Handle regex content",
      "properties": {
        "title": {
          "type": "string",
          "description": "Description"
        },
        "action": {
          "type": "string",
          "description": "Regex action",
          "enum": [
            "match",
            "exec",
            "test"
          ],
          "default": "match"
        },
        "input": {
          "type": "string",
          "description": "Regex pattern",
          "examples": [
            "${new String(${cnt})}"
          ]
        },
        "var": {
          "description": "Set result to a variable after handle",
          "anyOf": [
            {
              "type": "string",
              "description": "Set result to this"
            },
            {
              "type": "object",
              "description": "Set a part of result to this"
            }
          ]
        },
        "pattern": {
          "type": "string",
          "description": "Regex pattern"
        }
      }
    },
    "pause": {
      "type": "object",
      "description": "Pause or delay",
      "properties": {
        "title": {
          "type": "string",
          "description": "Description"
        },
        "time": {
          "type": "integer",
          "description": "Miliseconds"
        }
      }
    },
    "echo-schema": {
      "type": "string",
      "description": "Print data schema"
    },
    "input": {
      "type": "object",
      "description": "Get data from input keyboard",
      "required": [
        "var"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "var": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        }
      }
    },
    "exec": {
      "type": "object",
      "description": "Execute external command",
      "required": [
        "args"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "var": {
          "description": "Set result after execution",
          "anyOf": [
            {
              "type": "string",
              "description": "Result code",
              "examples": [
                0,
                1
              ]
            },
            {
              "type": "object",
              "description": "Set result to this properties",
              "examples": [
                "${$.log}",
                "${$.code}"
              ]
            }
          ]
        },
        "args": {
          "type": "array",
          "description": "The first is command name, then are agrs",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "validate": {
      "type": "object",
      "description": "Validate business logic or create new validate function",
      "examples": [
        "length",
        "schema",
        "match",
        "in"
      ],
      "required": [
        "func"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "Validation details"
        },
        "slient": {
          "type": "boolean"
        },
        "script": {
          "type": "string",
          "description": "Script to create new validation",
          "examples": [
            "(a, b) => a?.toLowerCase() === b?.toLowerCase()"
          ]
        },
        "func": {
          "description": "Function name",
          "type": "string",
          "examples": [
            "matchIgnoreCase"
          ]
        },
        "args": {
          "description": "Arguments function",
          "type": "array",
          "items": {
            "type": [
              "object",
              "string",
              "array",
              "boolean",
              "number",
              "null"
            ]
          }
        }
      }
    },
    "utils": {
      "type": "object",
      "description": "Create utils function which is used in variable",
      "examples": [
        "${$utils.base64('TesT')}"
      ],
      "required": [
        "func",
        "script"
      ],
      "properties": {
        "script": {
          "type": "string",
          "description": "Script to create new util function",
          "examples": [
            "(txt) => txt?.toLowerCase()"
          ]
        },
        "func": {
          "description": "Util function name",
          "type": "string",
          "examples": [
            "lower"
          ]
        }
      }
    },
    "testcase": {
      "type": "object",
      "description": "Includes all of scenarios",
      "required": [
        "steps",
        "title",
        "version",
        "servers",
        "developer"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "Document title"
        },
        "description": {
          "type": "string",
          "description": "Document description"
        },
        "version": {
          "type": "string",
          "description": "Document version"
        },
        "servers": {
          "type": "object",
          "description": "Servers which is published to client implements"
        },
        "debug": {
          "type": "boolean",
          "description": "Show debug link"
        },
        "developer": {
          "type": "string",
          "description": "Developer email"
        },
        "vars": {
          "$ref": "#/definitions/vars",
          "description": "Declare global variables"
        },
        "templates": {
          "$ref": "#/definitions/allOfSteps",
          "description": "Declare steps which not used to run, just extends"
        },
        "steps": {
          "$ref": "#/definitions/allOfSteps"
        }
      }
    },
    "vars": {
      "description": "Declare local variables which is used in this (In !api ...) and these childs steps (In !group)",
      "type": "object",
      "examples": [
        "$ = this, $$ = this.parent"
      ]
    },
    "doc-swagger": {
      "type": "object",
      "required": [
        "saveTo"
      ],
      "description": "Document this to swagger file",
      "properties": {
        "responseHeaders": {
          "description": "Only doc these response headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "headers": {
          "description": "Only doc these request headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "raw": {
          "description": "Raw data of swagger Open API",
          "$ref": "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas/v3.0/schema.json#"
        },
        "saveTo": {
          "type": "string",
          "description": "Target file"
        },
        "title": {
          "type": "string",
          "description": "Description"
        }
      }
    },
    "doc-md": {
      "type": "object",
      "required": [
        "saveTo"
      ],
      "description": "Document this to markdown file",
      "properties": {
        "responseHeaders": {
          "description": "Only doc these response headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "headers": {
          "description": "Only doc these request headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "saveTo": {
          "type": "string",
          "description": "Target file"
        },
        "title": {
          "type": "string",
          "description": "Description"
        }
      }
    },
    "output-file": {
      "type": "object",
      "required": [
        "saveTo"
      ],
      "properties": {
        "saveTo": {
          "type": "string",
          "description": "Target file"
        },
        "title": {
          "type": "string",
          "description": "Description"
        },
        "content": {
          "type": "string",
          "description": "File content"
        }
      }
    },
    "api": {
      "type": "object",
      "description": "Make a RESTFUL API",
      "properties": {
        "title": {
          "type": "string",
          "description": "API description"
        },
        "->": {
          "type": "string",
          "description": "Expose for another extends"
        },
        "<-": {
          "description": "Extends another which expose by '->'",
          "anyOf": [
            {
              "type": "string",
              "description": "Separate by ','"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "method": {
          "type": "string",
          "description": "Http method",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "HEAD"
          ]
        },
        "baseURL": {
          "type": "string",
          "description": "Base url"
        },
        "url": {
          "type": "string",
          "description": "Path or full request url"
        },
        "query": {
          "type": "object",
          "description": "Request query string"
        },
        "headers": {
          "type": "object",
          "description": "Request headers"
        },
        "params": {
          "type": "object",
          "description": "Request params in url (/user/{ID})",
          "examples": [
            "{ID: 123}"
          ]
        },
        "body": {
          "type": [
            "array",
            "integer",
            "null",
            "number",
            "object",
            "string",
            "boolean"
          ],
          "description": "Request body"
        },
        "var": {
          "description": "Set response data to a variable after call request",
          "anyOf": [
            {
              "type": "string",
              "description": "Set response data ($.response.data) to this"
            },
            {
              "type": "object",
              "description": "Set response ($.response) to this properties"
            }
          ]
        },
        "vars": {
          "$ref": "#/definitions/vars"
        },
        "validate": {
          "type": "array",
          "description": "Validate after call request",
          "items": {
            "$ref": "#/definitions/validate"
          }
        },
        "docs": {
          "type": "object",
          "description": "Document information for this api",
          "properties": {
            "headers": {
              "description": "Only doc these request headers",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "responseHeaders": {
              "description": "Only doc these response headers",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "md": {
              "tags": {
                "description": "Tag",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            },
            "swagger": {
              "description": "Set swagger properties",
              "$ref": "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas/v3.0/schema.json#/definitions/PathItem"
            }
          }
        },
        "benchmark": {
          "type": "object",
          "description": "Test benchmark this (!wrk)",
          "properties": {
            "title": {
              "type": "string",
              "description": "Benchmark title"
            },
            "connections": {
              "type": "number",
              "description": "Connections to keep open"
            },
            "script": {
              "type": "string",
              "description": "Load Lua script file"
            },
            "duration": {
              "type": "string",
              "description": "Duration of test",
              "examples": [
                "30s"
              ]
            },
            "threads": {
              "type": "number",
              "description": "Number of threads to use"
            },
            "latency": {
              "type": "boolean",
              "description": "Print latency statistics"
            },
            "timeout": {
              "type": "string",
              "description": "Socket/request timeout",
              "examples": [
                "2s"
              ]
            },
            "version": {
              "type": "boolean",
              "description": "Print version details"
            },
            "var": {
              "description": "Set result after execution",
              "anyOf": [
                {
                  "type": "string",
                  "description": "Result code",
                  "examples": [
                    0,
                    1
                  ]
                },
                {
                  "type": "object",
                  "description": "Set result to this properties",
                  "examples": [
                    "${$.log}",
                    "${$.code}"
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "group": {
      "type": "object",
      "description": "Group steps",
      "properties": {
        "title": {
          "type": "string",
          "description": "Group title"
        },
        "description": {
          "type": "string",
          "description": "Group description"
        },
        "loop": {
          "type": "string",
          "description": "Loop in object or array. (Get in group: '$.loopKey', '$.loopValue'), Get in each steps ('$$.loopKey', '$$.loopValue')"
        },
        "steps": {
          "$ref": "#/definitions/allOfSteps"
        }
      }
    }
  }
}